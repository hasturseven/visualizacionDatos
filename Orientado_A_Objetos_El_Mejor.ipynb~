{
 "cells": [
  {
   "cell_type": "markdown",
   "source": [
    "Hay distintas maneras de hacer gráficas dentro de Matplotlib, ya vimos pyplot; sin embargo, es muy complicado personalizarla y entrar a ciertos parámetros.\n",
    "\n",
    "Es un poco más complicado, pero en el mismo gráfico podemos personalizarlo mucho mejor.\n",
    "¿Para qué sirven?\n",
    "Pyplot \t            Object Oriented\n",
    "Rápido \t            Mayor personalización\n",
    "Fácil \t            Más código\n",
    "Una sola figura \tMás amigable a múltiples diagramas"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "<img src=\"orientadoObjetos.PNG\">"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "x = np.linspace(0,5,11)\n",
    "y = x ** 2"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%%\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "parámetros de axes:\n",
    "Pos. Eje x \tPos. Eje y \tSize graph eje x \tSize graph eje y"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    ">Utilizamos el concepto de objeto para crear una gráfica más personalizable"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "outputs": [],
   "source": [
    "#esto de figure se puede ver como un lienso que es donde pintan los artista es de cir como una lamina en java\n",
    "fig = plt.figure()\n",
    "#ahora le agregare ES PA POSICION DONDE QUIERO QUE PINTE ESE LIENZO\n",
    "axes = fig.add_axes([0.1,0.1,0.5,0.9])\n"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%%\n"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "outputs": [],
   "source": [
    "\n",
    "#esto de figure se puede ver como un lienso que es donde pintan los artista es de cir como una lamina en java\n",
    "fig = plt.figure()\n",
    "#LO DE ADENTRO SON CORDENADAS NO SON LOS VALORES DE X : OSEA SON CORDENADAS COMO DONDE ESTARA UBICADA DENTRO DE LA VENTANA SON LOS DOS PRIMEROS VALORES , Y LOS OTROS DOS VALORES SON EL ANCHO Y LARGO\n",
    "axes = fig.add_axes([0.1,0.1,0.5,0.9])\n",
    "#----------------------------------------------------\n",
    "\n",
    "\"\"\"ya en esta parte solo reemplazara los valores del eje por los que toma x and y y le generamos la lnea a zul \"\"\"\n",
    "axes.plot(x,y, 'b')\n",
    "plt.show()"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%%\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    ">Podemos crear varias gráficas dentro del lienzo llamando el método fig."
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "outputs": [],
   "source": [
    "\n",
    "\n",
    "fig = plt.figure()\n",
    "#LO DE ADENTRO SON CORDENADAS NO SON LOS VALORES DE X OSEA SON CORDENADAS COMO DONDE ESTARA UBICADA DENTRO DE LA VENTANA SON LOS DOS PRIMEROS VALORES , Y LOS OTROS DOS VALORES SON EL ANCHO Y LARGO\n",
    "axes = fig.add_axes([0.1,0.1,0.8,0.9])\n",
    "axes2 = fig.add_axes([0.17,0.55,0.4,0.3])\n",
    "\n",
    "# axes.plot(x,y, 'b')\n",
    "# axes2.plot(y,x, 'r:')\n",
    "# axes2.set_facecolor('grey')\n",
    "plt.show()"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%%\n"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "outputs": [],
   "source": [
    "\"\"\"AHORA SI AGREGANDO NUESTRSO VALORES A LOS EJES Y QUE LO GRAFIQUE\"\"\"\n",
    "\n",
    "fig = plt.figure()\n",
    "axes = fig.add_axes([0.1,0.1,0.8,0.9])\n",
    "axes2 = fig.add_axes([0.17,0.55,0.4,0.3])\n",
    "\n",
    "axes.plot(x,y, 'b')\n",
    "\"\"\"AHRORA LE ESTOY DICIENDO GRAFIQUE Y AL AXES 2 DELE OTRO FONDOP\"\"\"\n",
    "axes2.plot(y,x, 'r:')\n",
    "axes2.set_facecolor('grey')\n",
    "plt.show()"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%%\n"
    }
   }
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}